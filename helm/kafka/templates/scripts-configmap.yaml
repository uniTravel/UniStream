{{- $fullname := include "names.fullname" . }}
{{- $releaseNamespace := include "names.namespace" . }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ printf "%s-scripts" $fullname | trunc 63 | trimSuffix "-" }}
  namespace: {{ $releaseNamespace  | quote }}
data:
  kafka-init.sh: |-
    #!/bin/bash

    set -o errexit
    set -o nounset
    set -o xtrace
    set -o pipefail

    kafka_conf_set() {
        local file="${1:?missing file}"
        local key="${2:?missing key}"
        local value="${3:?missing value}"

        # Check if the value was set before
        if grep -q "^[#\\s]*$key\s*=.*" "$file"; then
            # Update the existing key
            replace_in_file "$file" "^[#\\s]*${key}\s*=.*" "${key}=${value}" false
        else
            # Add a new key
            printf '\n%s=%s' "$key" "$value" >>"$file"
        fi
    }

    replace_placeholder() {
      local placeholder="${1:?missing placeholder value}"
      local password="${2:?missing password value}"
      local -r del=$'\001'
      sed -i "s${del}$placeholder${del}$password${del}g" "$KAFKA_CONFIG_FILE"
    }

    echo "start configuration"
    export KAFKA_CONFIG_FILE=/config/server.properties
    cp /configmaps/server.properties $KAFKA_CONFIG_FILE

    POD_ID=$(echo "$POD_NAME" | rev | cut -d'-' -f 1 | rev)
    kafka_conf_set "$KAFKA_CONFIG_FILE" "node.id" "$POD_ID"
    replace_placeholder "advertised-address-placeholder" "$POD_NAME.{{ $fullname }}-headless.{{ $releaseNamespace }}.svc.cluster.local"